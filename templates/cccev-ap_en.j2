{% extends "semic_core_voc.j2" %}

{% block summary %}
<p>
  This document describes the <strong>Core Criterion and Core Evidence Vocabulary</strong>.
  Similarly to all the Core Vocabularies, CCCEV is "<a href="https://joinup.ec.europa.eu/sites/default/files/inline-files/ISA%20Handbook%20for%20using%20Core%20Vocabularies.pdf">a context-neutral data model that captures the fundamental characteristics of an entity</a>".
  A Core Vocabulary specifies a semantic data model covering a set of use cases across domains.
  The specification consists of terms with a minimal set of constraints (recommended codelists, usage guidelines).
</p>
<p>
	The Core Criterion and Core Evidence Vocabulary (CCCEV) is designed to support the exchange of information between organisations or persons (more generally agents) defining requirements and organisations or persons responding to these requirements by means of structured or unstructured evidences.
</p>
<p>
	The Core Criterion and Core Evidence Vocabulary (CCCEV) contains two basic and complementary core concepts:
	<ul>
		<li>
			The requirement, something used as the basis for making a judgement or decision, e.g. a requirement set in a public tender or a condition that has to be fulfilled for a public service to be executed; and
		</li>
		<li>
			The evidence, the data proving or disproving that a requirement is met or has been fulfilled, in particular an evidence is used to prove that a specific requirement is met by someone or by something.
		</li>
	</ul>
</p>
<p>
	CCCEV is shaping a general framework around these core concepts. However, implementations have to make decisions on how the framework is actually used by elaborating further the Core Vocabulary to make it applicable in their specific context. 
</p>
<p>
	An explanatory example that helps the reader to better understand this specification can be found <a href="./html/CCCEV_AnExplanatoryExample.pdf">here</a>.
</p>
{% endblock %}

{% block license %}
<p>This specification of <a href="https://joinup.ec.europa.eu/collection/semantic-interoperability-community-semic">SEMIC</a> is published under "<a href="https://joinup.ec.europa.eu/licence/isa-open-metadata-licence-v11">ISA Open Metadata Licence 1.1</a>".</p>
{% endblock %}

{% block changelog %}
</br>
</br>
A changelog describing the (major) changes to the previous version (1.0.0) of the Core Criterion and Core Evidence Vocabulary (released in December 2016) and the new version that is here being proposed (2.0.0), can be found <a href="Changelog.md">here</a>.
<!--
</br>
</br>
<p>
  In this section, we list the major changes of this version of CCCEV compared to the <a href="https://github.com/SEMICeu/CCCEV/tree/CV-2.0.0/cccev/2.0.0">previous proposal (v2.0.0)</a> that was published on GitHub.
</p>
</br>
</br>

<h3 class="h3" aria-level="1" role="heading">
  Decouple CCCEV from other vocabularies, in particular DCAT-AP
</h3>
<h4 class="h4" aria-level="1" role="heading">
  Motivation
</h4>
<p>
<ul>
  <li>
   Coupling entities to existing vocabularies (e.g. by subclassing) is enforcing the superclass view on the entities.
    Often this coupling did not contribute to clarify the intended semantics of the CCCEV entities. The impact
    was more restrictive than necessary.
  </li>
</ul>
</p>
<h4 class="h4" aria-level="1" role="heading">
  Activities
</h4>
<p>
<ul>
  <li>
    Mostly a removal of dependencies of DCAT(-AP) except for Evidence.
  </li>
  <li>
    Such dependencies are now part of discussions at the level of implementations.
  </li>
</ul>
</p>
</br>
</br>

<h3 class="h3" aria-level="1" role="heading">
  Align CCCEV with other Core Vocabularies
</h3>
<h4 class="h4" aria-level="1" role="heading">
  Motivation
</h4>
<p>
  <ul>
    The SEMIC Core Vocabularies are built around a few external vocabularies. In particular for metadata aspects
    dcterms is the base reference.
  </ul>
</p>
<h4 class="h4" aria-level="1" role="heading">
  Activities
</h4>
<p>
<ul>
  <li>
    Replacement of URI mapping from cbc to dcterms. 
  </li>
  <li>
    This additionally reduces the mapping ambiguity that would arise from subclassing from dcat:Dataset.
  </li>
</ul>
</p>
</br>
</br>

<h3 class="h3" aria-level="1" role="heading">
  Semantical clarifications
</h3>
<h4 class="h4" aria-level="1" role="heading">
  Motivation
</h4>
<p>
  <ul>
    Many of the entities in the proposal did not had a formal definition, nor even an informal motivation for their
    appearance in the CCCEV data model.
  </ul>  
</p>
<h4 class="h4" aria-level="1" role="heading">
  Activities
</h4>
<p>
<ul>
  <li>
    Ensure that every term has a label/definition/mapped to an URI.
  </li>
</ul>
</p>
</br>
</br>

<h3 class="h3" aria-level="1" role="heading">
  Disentangling the semantics from (XML) serialization needs
</h3>
<h4 class="h4" aria-level="1" role="heading">
  Motivation
</h4>
<p>
<ul>
  <li>
    Part of the modeling and URI mappings were heavily inspired from the perspective of the best practices for
    XML payload creation that are applied by the parties around the table.
  </li>
  <li>
    Despite that usable XML payloads for the parties around the table was probably the main objective, this
    creates a data model were payload technicalities are mixed with a high-level context. This conflicts with the
    objective of a Core Vocabulary which is as much as possible implementation neutral. 
  </li>
</ul>
</p>
<h4 class="h4" aria-level="1" role="heading">
  Activities
</h4>
<p>
<ul>
  <li>
    The whole structure around concept and value has been severely reduced to minimal aspects to capture the semantics.
  </li>
  <li>
    Value has been renamed to Supported Value and is now a response to a request instead of a dangling entity.
  </li>
</ul>
</p>
</br>
</br>

<h3 class="h3" aria-level="1" role="heading">
  Removal of non-motivated entities such as cccev:DocumentReference
</h3>
<h4 class="h4" aria-level="1" role="heading">
  Motivation
</h4>
<p>
<ul>
  <li>
    No clear semantics were provided. On the extended view of the proposal many explicit properties of DCAT are
    listed. Probably they result from discussions on describing discussed information items that the parties around
    the table would like to have covered. By listing them explicitly, the proof has given that the CCCEV model is
    capable to capture the required notions. To introduce them in the CCCEV context, the definitions and
    terminology of those properties should be contextualized to the CCCEV setting. Note that this contextualization
    is anyhow a non-trivial process, as DCAT is an application profile for cataloguing entities. So the catalog is a key
    context setting for a dcat:Dataset while CCCEV is not about cataloging. 
  </li>
  <li>
    However, none of the properties have been motivated or explained how they form an integral part of CCCEV.
    Lacking this motivation means that it is non-critical information that must be part of the Core Vocabulary level. It
    however means that those properties will arise during implementation discussions.
  </li>
  <li>
    Note that by subclassing Evidence to dcat:Dataset all the removed aspects are implicitly included. This implicit
    approach essentially creates a lot of freedom, which makes CCCEV not usuable out-of-the-box. 
  </li>
</ul>
</p>
<h4 class="h4" aria-level="1" role="heading">
  Activities
</h4>
<p>
<ul>
  <li>
    Removing all non-motivated properties. This has mostly as consequence that all dcat properties have disappeared.
  </li>
</ul>
</p>
</br>
</br>

<h3 class="h3" aria-level="1" role="heading">
  Changes in the preferred directionality of the relationships
</h3>
<h4 class="h4" aria-level="1" role="heading">
  Motivation
</h4>
<p>
<ul>
  <li>
    Some relationships had a counter-intuitive preferred relationship. 
  </li>
</ul>
</p>
<h4 class="h4" aria-level="1" role="heading">
  Activities
</h4>
<p>
<ul>
  <li>
    cccev:hasConstraint -> cccev:constrains
  </li>
  <li>
    cccev:isValueOf -> cccev :providesValueFor (name change + maintain only one direction)
  </li>
</ul>
</p>
</br>
</br>

<h3 class="h3" aria-level="1" role="heading">
  Added properties
</h3>
<h4 class="h4" aria-level="1" role="heading">
  Motivation
</h4>
<p>
<ul>
  <li>
    New properties that enhance the application of CCCEV.
  </li>
</ul>
</p>
<h4 class="h4" aria-level="1" role="heading">
  Activities
</h4>
<p>
<ul>
  <li>
    cccev:issuedBy: Requirement -> Agent
  </li>
  <li>
    cccev:supportsValue: Evidence -> SupportedValue 
  </li>
</ul>
</p>
</br>
</br>

<h3 class="h3" aria-level="1" role="heading">
  Renaming
</h3>
<h4 class="h4" aria-level="1" role="heading">
  Motivation
</h4>
<p>
<ul>
  <li>
    Some entities or relationships do not use labels that immediately guide a reader into the desired semantics.
    Some even create confusion.
  </li>
</ul>
</p>
<h4 class="h4" aria-level="1" role="heading">
  Activities
</h4>
<p>
<ul>
  <li>
    Concept: confusion with skos:Concept. Better to use Information Concept.
  </li>
  <li>
    Value: reads as if it is something very generic. Changed to SupportedValue.
  </li>
  <li>
    EvidenceTypeList: it is not a list, but actually an AND-condition that should be fulfilled. (TODO: ongoing search for an improved name).
  </li>
</ul>
</p>
</br>
</br>
-->
{% endblock %}

{% block implementationNote %}
</br>
</br>
<p>
  CCCEV as a Core Vocabulary is implementation-neutral. CCCEV does not impose any choices regarding <i>how</i> the data is being exchanged. Furthermore, CCCEV does not enforce the information carried in an Evidence to be directly accessible i.e. contained within the payload of the response. However, CCCEV does offer several ways to implement these aspects: (1) via subclassing of the Evidence class, (2) via sharing it as a dcat:Distribution or (3) via the class Supported Value. These are three distinguishable approaches, which can be used independently from each other, or in combination.
</p>
</br>
<p>
  CCCEV provides a framework for the implementers to define the actual information models and metadata models an Evidence should comply to. For example, a Birth Certificate model could be defined as a particular Evidence Type to which the Evidence shared by the competent authority should conform to. This information model would make use of existing metadata models. The implementer can define one or several domain specific models for defining the information acceptable or required within an Evidence.
</p>
</br>
<p>
  In practice, an Evidence (from the perspective of being a document) often provides more information than is required for the decision making process. Despite that it might be possible to express all these information pieces as Information Concepts, this remains a choice for the implementer. It is not the intent of CCCEV to provide a full-fledged data modeling framework with the notion of Information Concept and Supported Value. Usages such as creating Information Concepts independent from Requirements or providing Values for Information Concepts that are not requested by a Requirement should be considered as unintended usages, beyond the scope of CCCEV.
</p>
{% endblock %}
